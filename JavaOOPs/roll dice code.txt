import java.util.Random;

// Die Class
class Die {
    // Members
    private int value;

    // Methods
    public int getValue() {
        return value;
    }

    public void setValue(int value) {
        this.value = value;
    }
}

// DiceRoller Class
class DiceRoller {
    // Members
    private Random random;

    // Constructor
    public DiceRoller() {
        this.random = new Random();
    }

    // Methods
    public void rollDie(Die die) {
        int randomValue = random.nextInt(6) + 1; // Random value between 1 and 6
        die.setValue(randomValue);
    }
}

// Player Class
class Player {
    // Members
    private String name;
    private int score;

    // Constructor
    public Player(String name) {
        this.name = name;
        this.score = 0;
    }

    // Methods
    public String getName() {
        return name;
    }

    public int getScore() {
        return score;
    }

    public void addToScore(int points) {
        score += points;
    }
}

// DiceGame Class
public class DiceGame {
    public static void main(String[] args) {
        // Create instances of Die, DiceRoller, and two Player objects
        Die die = new Die();
        DiceRoller diceRoller = new DiceRoller();
        Player player1 = new Player("Player 1");
        Player player2 = new Player("Player 2");

        // Specify the number of rounds
        int numberOfRounds = 3;

        // Play the game for the specified number of rounds
        for (int round = 1; round <= numberOfRounds; round++) {
            // Player 1's turn
            diceRoller.rollDie(die);
            int points1 = die.getValue();
            player1.addToScore(points1);
            System.out.println(player1.getName() + " rolled a " + points1);

            // Player 2's turn
            diceRoller.rollDie(die);
            int points2 = die.getValue();
            player2.addToScore(points2);
            System.out.println(player2.getName() + " rolled a " + points2);

            System.out.println();
        }

        // Calculate and display the winner based on total scores
        if (player1.getScore() > player2.getScore()) {
            System.out.println(player1.getName() + " wins!");
        } else if (player1.getScore() < player2.getScore()) {
            System.out.println(player2.getName() + " wins!");
        } else {
            System.out.println("It's a tie!");
        }
    }
}